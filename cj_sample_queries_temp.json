{"input": "2024년 8월 한 달간 특정 기업 고객들의 박스 유형별 수량 및 매출 현황 조회\n\n이 쿼리는 2024년 8월 1일부터 31일까지의 기간 동안 지정된 기업 고객들에 대해 박스 유형(극소, 소, 중, 대1, 이형, 취급제한, 대2)별로 처리된 수량과 매출 금액을 집계하여 보여줍니다. 기업 고객명, 박스 유형별 수량과 매출액이 상세히 제공됩니다. 이를 통해 해당 기간의 주요 기업 고객 거래 현황을 파악할 수 있습니다.", "query": "SELECT COUNT(*) FROM (WITH V_SEARCH AS (SELECT '20240801' AS V_ST, '20240831' AS V_END, '' AS V_BRACHNM, '' AS V_TEAMNM), TMP AS (SELECT LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.CUST_CD AS 고객번호, LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.BIZCST_NM AS 기업고객명, CASE WHEN LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.BOX_TYP_CD = '1' THEN SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.VAT_EXCL_ADPT_AMT) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.VAT_EXCL_ADPT_EXPT_AMT) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.VAT_EXCL_CRDT_AMT) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.VAT_EXCL_CODP_AMT) ELSE 0 END) ELSE 0 END 극소_매출, CASE WHEN LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.BOX_TYP_CD = '2' THEN SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.VAT_EXCL_ADPT_AMT) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.VAT_EXCL_ADPT_EXPT_AMT) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.VAT_EXCL_CRDT_AMT) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.VAT_EXCL_CODP_AMT) ELSE 0 END) ELSE 0 END 소_매출, CASE WHEN LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.BOX_TYP_CD = '3' THEN SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.VAT_EXCL_ADPT_AMT) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.VAT_EXCL_ADPT_EXPT_AMT) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.VAT_EXCL_CRDT_AMT) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.VAT_EXCL_CODP_AMT) ELSE 0 END) ELSE 0 END 중_매출, CASE WHEN LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.BOX_TYP_CD = '4' THEN SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.VAT_EXCL_ADPT_AMT) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.VAT_EXCL_ADPT_EXPT_AMT) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.VAT_EXCL_CRDT_AMT) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.VAT_EXCL_CODP_AMT) ELSE 0 END) ELSE 0 END 대1_매출, CASE WHEN LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.BOX_TYP_CD = '5' THEN SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.VAT_EXCL_ADPT_AMT) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.VAT_EXCL_ADPT_EXPT_AMT) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.VAT_EXCL_CRDT_AMT) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.VAT_EXCL_CODP_AMT) ELSE 0 END) ELSE 0 END 이형_매출, CASE WHEN LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.BOX_TYP_CD = '6' THEN SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.VAT_EXCL_ADPT_AMT) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.VAT_EXCL_ADPT_EXPT_AMT) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.VAT_EXCL_CRDT_AMT) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.VAT_EXCL_CODP_AMT) ELSE 0 END) ELSE 0 END 취급제한_매출, CASE WHEN LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.BOX_TYP_CD = '7' THEN SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.VAT_EXCL_ADPT_AMT) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.VAT_EXCL_ADPT_EXPT_AMT) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.VAT_EXCL_CRDT_AMT) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.VAT_EXCL_CODP_AMT) ELSE 0 END) ELSE 0 END 대2_매출, CASE WHEN LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.BOX_TYP_CD = '1' THEN SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('04', '05', '07', '08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.ADPT_QTY) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('04', '05', '07', '08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.ADPT_PREARR_QTY) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('04', '05', '07', '08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.CRDT_QTY) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('04', '05', '07', '08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.CODP_QTY) ELSE 0 END) ELSE 0 END 극소_수량, CASE WHEN LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.BOX_TYP_CD = '2' THEN SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('04', '05', '07', '08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.ADPT_QTY) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('04', '05', '07', '08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.ADPT_PREARR_QTY) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('04', '05', '07', '08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.CRDT_QTY) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('04', '05', '07', '08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.CODP_QTY) ELSE 0 END) ELSE 0 END 소_수량, CASE WHEN LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.BOX_TYP_CD = '3' THEN SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('04', '05', '07', '08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.ADPT_QTY) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('04', '05', '07', '08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.ADPT_PREARR_QTY) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('04', '05', '07', '08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.CRDT_QTY) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('04', '05', '07', '08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.CODP_QTY) ELSE 0 END) ELSE 0 END 중_수량, CASE WHEN LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.BOX_TYP_CD = '4' THEN SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('04', '05', '07', '08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.ADPT_QTY) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('04', '05', '07', '08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.ADPT_PREARR_QTY) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('04', '05', '07', '08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.CRDT_QTY) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('04', '05', '07', '08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.CODP_QTY) ELSE 0 END) ELSE 0 END 대1_수량, CASE WHEN LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.BOX_TYP_CD = '5' THEN SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('04', '05', '07', '08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.ADPT_QTY) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('04', '05', '07', '08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.ADPT_PREARR_QTY) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('04', '05', '07', '08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.CRDT_QTY) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('04', '05', '07', '08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.CODP_QTY) ELSE 0 END) ELSE 0 END 이형_수량, CASE WHEN LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.BOX_TYP_CD = '6' THEN SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('04', '05', '07', '08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.ADPT_QTY) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('04', '05', '07', '08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.ADPT_PREARR_QTY) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('04', '05', '07', '08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.CRDT_QTY) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('04', '05', '07', '08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.CODP_QTY) ELSE 0 END) ELSE 0 END 취급제한_수량, CASE WHEN LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.BOX_TYP_CD = '7' THEN SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('04', '05', '07', '08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.ADPT_QTY) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('04', '05', '07', '08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.ADPT_PREARR_QTY) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('04', '05', '07', '08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.CRDT_QTY) ELSE 0 END) + SUM(CASE WHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('04', '05', '07', '08') THEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.CODP_QTY) ELSE 0 END) ELSE 0 END 대2_수량 FROM LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P INNER JOIN LOGIS_ADMIN.IAMD_TB_MNGBRAN_M M ON LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.BRAN_CD = M.MNG_BRAN_CD INNER JOIN LOGIS_ADMIN.IAML_TB_BIDEALDIV_D ON LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DEAL_DTL_DCD = LOGIS_ADMIN.IAML_TB_BIDEALDIV_D.CUST_CLSF_DTL_CD INNER JOIN LOGIS_ADMIN.IAML_TB_DATDIV_M ON LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD = LOGIS_ADMIN.IAML_TB_DATDIV_M.DAT_DCD INNER JOIN V_SEARCH V ON LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.COC_DT BETWEEN V.V_ST AND V.V_END WHERE 1 = 1 AND V.V_BRACHNM = (CASE WHEN nullif(V.V_BRACHNM, '') IS NOT NULL THEN M.BRCH_NM ELSE '' END) AND V.V_TEAMNM = (CASE WHEN nullif(V.V_TEAMNM, '') IS NOT NULL THEN M.BIZ_TEAM_NM ELSE '' END) AND LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.CUST_CD IN ('30220890', '30262498', '30265018', '30265019', '30265021', '30306262', '30311639', '30314989', '30378113', '30391050', '30410556', '30415782', '30415784', '30422624', '30438062', '30453310', '30457255', '30466605', '30469636', '30475450', '30476892', '30483090', '30483184', '30483227', '30483228', '30483229', '30483230', '30483231', '30483232', '30483233', '30483234', '30483235', '30483236', '30483237', '30492392', '30496984', '30509410', '30510448', '30513074', '30513745', '30515956', '30515976', '30515987', '30521241', '30521242', '30521243', '30521244', '30523523', '30526467', '30532124', '30532126', '30533405') GROUP BY LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.CUST_CD, LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.BIZCST_NM, LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.BOX_TYP_CD) SELECT 고객번호, 기업고객명, SUM(극소_수량) 극소_수량, SUM(소_수량) 소_수량, SUM(중_수량) 중_수량, SUM(대1_수량) 대1_수량, SUM(이형_수량) 이형_수량, SUM(취급제한_수량) 취급제한_수량, SUM(대2_수량) 대2_수량, SUM(극소_매출) 극소_매출, SUM(소_매출) 소_매출, SUM(중_매출) 중_매출, SUM(대1_매출) 대1_매출, SUM(이형_매출) 이형_매출, SUM(취급제한_매출) 취급제한_매출, SUM(대2_매출) 대2_매출 FROM TMP GROUP BY 고객번호, 기업고객명) dbvrcnt"}
{"input": "운임 구분과 관련된 기초 대분류 코드 및 관련 정보 조회\n\n이 쿼리는 운임 구분과 관련된 기초 대분류 코드와 그 코드에 대한 상세 정보를 조회하기 위한 목적으로 사용됩니다. 물류 운영에서 운임 구분은 화물 운송 비용을 계산하고 관리하는 데 중요한 요소입니다. 따라서 이 쿼리를 통해 운임 구분 코드와 관련된 기본 정보를 확인할 수 있어 물류 운영 프로세스 개선 및 효율화에 도움이 될 것입니다.", "query": "select * from LOGIS_ADMIN.IAWD_TB_DCBSCD_BASISLC_M where basis_lclsf_cd_nm like '%운임구분%'"}
{"input": "특정 기업 고객의 4월 1일부터 7월 31일 사이 집화된 운송 건에 대한 운임구분, 집화일자, 배송완료일자, 운임, 수수료, 박스타입 정보 조회", "query": "select A.wbl_no ,B.basis_sclsf_cd_nm as 운임구분 ,coc_dt  as 집화일자 ,dlv_cmplt_dt as 배송완료일자 ,bsc_fare as 운임 ,coc_fee as 수수료 ,C.basis_sclsf_cd_nm as 박스타입 from logis_admin.iawd_tb_dcbmch_wbfeestl_p A join LOGIS_ADMIN.IAWD_TB_DCBSCD_BASISSC_D B on A.fare_dcd = B.basis_sclsf_cd  join (select  A.wbl_no , B.basis_sclsf_cd_nm from logis_admin.iawd_tb_dccrpa_itsdscd_p A join LOGIS_ADMIN.IAWD_TB_DCBSCD_BASISSC_D B on A.box_typ_cd  = B.basis_sclsf_cd where coc_dt between '20240401' and '20240731' and B.basis_lclsf_cd = 'CS007') C on A.wbl_no = C.wbl_no where coc_scan_yn is not null and B.basis_lclsf_cd = 'CS006' and A.corp_cust_cd ='30520851'"}
{"input": "가장 오래된 택배 집화 날짜 조회\n\n이 쿼리는 택배 운송장 기본 정보 테이블에서 가장 오래된 집화 날짜를 찾는 것으로 보입니다. 택배사가 운영 초기부터 현재까지 처리한 모든 운송장 중 가장 오래된 집화일자를 확인하여 데이터 보관 기간이나 시스템 운영 기간 등을 파악하는 데 활용될 수 있습니다. 또한 장기간 보관된 데이터를 정리하거나 백업하는 등의 데이터 관리 업무에 필요한 기준 정보를 제공할 수 있습니다.", "query": "select min(coc_dt) from logis_admin.iawd_tb_dcwbwr_wbl_m"}
{"input": "기초 대분류 코드가 'RV002'인 기초 소분류 코드에 대한 상세 정보 조회\n\n이 쿼리는 기초 대분류 코드가 'RV002'인 기초 소분류 코드의 세부 내역을 확인하기 위한 목적으로 사용됩니다. 기초 소분류 코드명, 기초값 내용 등의 정보를 얻을 수 있습니다. 특정 대분류 코드에 속하는 소분류 코드들의 상세 내역을 파악하여 코드 관리 및 데이터 분석에 활용할 수 있습니다.", "query": "select * from LOGIS_ADMIN.IAWD_TB_DCBSCD_BASISSC_D where basis_lclsf_cd = 'RV002'"}
{"input": "8월 한 달간 집화된 운송장 건수 확인\n\n이는 8월 한 달 동안 물류 센터에서 처리한 택배 물량을 파악하기 위한 목적일 것입니다. 월별 물동량 추이를 분석하여 물류 운영 계획 수립 및 인력/차량 투입 계획 수립에 활용할 수 있습니다. 또한 특정 기간 동안의 업무량을 모니터링하여 물류 프로세스 개선 필요성을 가늠할 수 있습니다.", "query": "select count(*) from logis_admin.iawd_tb_dcwbwr_wbl_m where coc_dt between '20240801' and '20240831'"}
{"input": "기초 대분류 코드가 'AC200'인 기초 소분류 코드에 대한 상세 정보 조회\n\n이 쿼리는 물류 관리 시스템에서 특정 대분류 코드에 속하는 소분류 코드들의 세부 내역을 확인하기 위한 용도로 사용될 수 있습니다. 대분류 코드 'AC200'에 해당하는 모든 소분류 코드와 관련 정보(소분류 코드명, 기초값 내용 등)를 조회하여 분류 체계를 파악하거나 특정 소분류 코드에 대한 정보를 찾아볼 때 활용할 수 있습니다.", "query": "select * from LOGIS_ADMIN.IAWD_TB_DCBSCD_BASISSC_D where basis_lclsf_cd = 'AC200'"}
{"input": "특정 운송장 번호 685484591280에 대한 운송장 기본 정보 조회\n\n이 쿼리는 물류 운송 프로세스에서 특정 운송장의 상세 정보를 확인하기 위한 목적으로 사용될 수 있습니다. 운송장 번호를 통해 해당 운송 건의 출발지, 도착지, 화물 정보, 배송 상태 등의 세부사항을 조회할 수 있습니다. 이를 통해 고객 문의에 대한 대응, 운송 추적, 배송 지연 원인 분석 등 다양한 업무 처리가 가능해집니다.", "query": "select * from logis_admin.iawd_tb_dcwbwr_wbl_m where wbl_no  = '685484591280'"}
{"input": "박스 관련 기초 대분류 코드 정보 조회\n\n상세 목적 및 동기:\n- 물류/유통 시스템에서 박스와 관련된 기초 대분류 코드 정보를 확인하고자 함\n- 박스 관련 업무 프로세스나 데이터 분류에 활용될 기초 대분류 코드를 찾고자 함\n- 박스 관련 마스터 데이터 관리 및 데이터 정합성 점검을 위해 해당 코드 정보 확인 필요", "query": "select * from LOGIS_ADMIN.IAWD_TB_DCBSCD_BASISLC_M where basis_lclsf_cd_nm like '%박스%'"}
{"input": "2024년 7월 기업 고객별 택배 물량 및 매출 현황 조회", "query": "select bizno as 사업자등록번호, bizcst_nm as 세금계산서고객명 , sum(\"202407_M_수량\") as \"202407_M_수량\" , sum(\"202407_M_금액\") as \"202407_M_금액\" from ( SELECT LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.BIZNO     , LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.BIZCST_NM   \t, CASE WHEN substr(LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.COC_DT,1,7) =  '2024-07' THEN       \tSUM(CASE  \t\tWHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('08') \t\t\tTHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.VAT_EXCL_ADPT_AMT) \t\tELSE 0 \t\tEND) + SUM(CASE  \t\tWHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('08') \t\t\tTHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.VAT_EXCL_ADPT_EXPT_AMT) \t\tELSE 0 \t\tEND) + SUM(CASE  \t\tWHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('08') \t\t\tTHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.VAT_EXCL_CRDT_AMT) \t\tELSE 0 \t\tEND) + SUM(CASE  \t\tWHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ('08') \t\t\tTHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.VAT_EXCL_CODP_AMT) \t\tELSE 0 \t\tEND)     ELSE 0 END AS \"202407_M_금액\"     , CASE WHEN substr(LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.COC_DT,1,7) =  '2024-07' THEN       \tSUM(CASE  \t\tWHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ( \t\t\t\t'04' \t\t\t\t,'05' \t\t\t\t,'07' \t\t\t\t,'08' \t\t\t\t) \t\t\tTHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.ADPT_QTY) \t\tELSE 0 \t\tEND) + SUM(CASE  \t\tWHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ( \t\t\t\t'04' \t\t\t\t,'05' \t\t\t\t,'07' \t\t\t\t,'08' \t\t\t\t) \t\t\tTHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.ADPT_PREARR_QTY) \t\tELSE 0 \t\tEND) + SUM(CASE  \t\tWHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ( \t\t\t\t'04' \t\t\t\t,'05' \t\t\t\t,'07' \t\t\t\t,'08' \t\t\t\t) \t\t\tTHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.CRDT_QTY) \t\tELSE 0 \t\tEND) + SUM(CASE  \t\tWHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD) NOT IN ( \t\t\t\t'04' \t\t\t\t,'05' \t\t\t\t,'07' \t\t\t\t,'08' \t\t\t\t) \t\t\tTHEN (LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.CODP_QTY) \t\tELSE 0 \t\tEND)     ELSE 0 END AS \"202407_M_수량\" FROM LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P INNER JOIN LOGIS_ADMIN.IAMD_TB_MNGBRAN_M M ON LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.BRAN_CD = M.MNG_BRAN_CD INNER JOIN LOGIS_ADMIN.IAML_TB_BIDEALDIV_D ON LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DEAL_DTL_DCD = LOGIS_ADMIN.IAML_TB_BIDEALDIV_D.CUST_CLSF_DTL_CD INNER JOIN LOGIS_ADMIN.IAML_TB_DATDIV_M ON LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.DAT_DCD = LOGIS_ADMIN.IAML_TB_DATDIV_M.DAT_DCD where 1=1 and LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.coc_dt between '2024-01-01' and '2024-07-31' GROUP BY  LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.BIZNO     , LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.BIZCST_NM     , substr(LOGIS_ADMIN.IAMF_TB_COCBRANBYORGSALES_P.COC_DT,1,7) ) p group by bizno, bizcst_nm order by bizno"}
